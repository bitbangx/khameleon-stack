version: "3.7"

services:

  backend:
    image: registry.voodoo-dev.com/kameleon-backend:latest
    container_name: kameleon-backend
    restart: always
    ports:
      - 3069:3069
    env_file: 
      - ./erp/.prod.env
    volumes:
      - ${HOST_STORAGE_ROOT:-/var}:/data
    networks:
      - app-network

  frontend:
    image: registry.voodoo-dev.com/kameleon-frontend:latest
    container_name: kameleon-frontend
    restart: always
    ports:
      - 8069:8069
    networks:
      - app-network
    environment: 
      - KAMELEON_DOMAIN=${KAMELEON_DOMAIN:-kameleon.com}
    env_file: 
      - ./erp/.prod.env

  nginx:
    container_name: kameleon-nginx
    image: nginx:latest
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    environment: 
      - KAMELEON_DOMAIN=${KAMELEON_DOMAIN:-kameleon.com}
    command: /bin/bash -c "export DOLLAR='$$'; envsubst < /etc/nginx/conf.d/kameleon.conf.template > /etc/nginx/conf.d/default.conf && cat /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  db:
    container_name: kameleon-db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    env_file: 
      - ./erp/.prod.env
    volumes:
      - ./.sql:/docker-entrypoint-initdb.d/:ro
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    container_name: kameleon-pgadmin
    depends_on:
      - db
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8081:80
    env_file: 
      - ./erp/.prod.env
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      - app-network

volumes: 
  pgdata:
  pgadmindata:

networks:
  app-network:
    driver: bridge
